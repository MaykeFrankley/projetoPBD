-- MySQL Script generated by MySQL Workbench
-- Mon Oct 14 15:41:24 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema argus
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema argus
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `argus` DEFAULT CHARACTER SET utf8 ;
USE `argus` ;

-- -----------------------------------------------------
-- Table `argus`.`Pessoas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Pessoas` (
  `codPessoa` INT NOT NULL AUTO_INCREMENT,
  `Nome` VARCHAR(100) NOT NULL,
  `Naturalidade` VARCHAR(40) NOT NULL,
  `Dt_nascimento` DATE NOT NULL,
  `CPF` VARCHAR(14) NULL,
  `Status` ENUM("Ativo", "Inativo") NOT NULL,
  PRIMARY KEY (`codPessoa`),
  UNIQUE INDEX `CPF_UNIQUE` (`CPF` ASC) INVISIBLE,
  INDEX `index_Nome_pessoas` (`Nome` ASC) INVISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`ResponsaveisFinanceiros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`ResponsaveisFinanceiros` (
  `codPessoa` INT NOT NULL,
  `codAluno` INT NOT NULL,
  `CPF` VARCHAR(14) NOT NULL,
  `Status` ENUM("Ativo", "Inativo") NOT NULL,
  PRIMARY KEY (`codPessoa`, `codAluno`),
  INDEX `fk_CPF_resp_idx` (`CPF` ASC) VISIBLE,
  INDEX `index_codResp` (`codPessoa` ASC) VISIBLE,
  INDEX `fk_codAluno_resp_idx` (`codAluno` ASC) VISIBLE,
  CONSTRAINT `fk_codPessoa_resp`
    FOREIGN KEY (`codPessoa`)
    REFERENCES `argus`.`Pessoas` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_codAluno_resp`
    FOREIGN KEY (`codAluno`)
    REFERENCES `argus`.`Pessoas` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_CPF_resp`
    FOREIGN KEY (`CPF`)
    REFERENCES `argus`.`Pessoas` (`CPF`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Alunos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Alunos` (
  `codPessoa` INT NOT NULL,
  `NomeMae` VARCHAR(100) NOT NULL,
  `NomePai` VARCHAR(100) NOT NULL,
  `codResponsavelFin` INT NOT NULL,
  `Status` ENUM("Ativo", "Inativo") NOT NULL,
  PRIMARY KEY (`codPessoa`),
  INDEX `index_codMae` (`NomeMae` ASC) VISIBLE,
  INDEX `index_codPai` (`NomePai` ASC) VISIBLE,
  INDEX `index_codPessoa_aluno` (`codPessoa` ASC) VISIBLE,
  INDEX `index_responsavel` (`codResponsavelFin` ASC) VISIBLE,
  CONSTRAINT `fk_codPessoa_aluno`
    FOREIGN KEY (`codPessoa`)
    REFERENCES `argus`.`Pessoas` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Responsavel_aluno`
    FOREIGN KEY (`codResponsavelFin`)
    REFERENCES `argus`.`ResponsaveisFinanceiros` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Enderecos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Enderecos` (
  `codPessoa` INT NOT NULL,
  `Rua` VARCHAR(45) NOT NULL,
  `Numero` INT NOT NULL,
  `Complemento` VARCHAR(45) NULL,
  `Bairro` VARCHAR(45) NOT NULL,
  `Cidade` VARCHAR(45) NOT NULL,
  `Estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`codPessoa`),
  INDEX `INDEX_codPessoa` (`codPessoa` ASC) INVISIBLE,
  CONSTRAINT `fk_codPessoa_end`
    FOREIGN KEY (`codPessoa`)
    REFERENCES `argus`.`Pessoas` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Professores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Professores` (
  `codPessoa` INT NOT NULL,
  `CPF` VARCHAR(14) NOT NULL,
  `formacao` VARCHAR(15) NOT NULL,
  `cursoFormacao` VARCHAR(45) NOT NULL,
  `Status` VARCHAR(7) NOT NULL,
  PRIMARY KEY (`codPessoa`),
  INDEX `INDEX_codPessoa` (`codPessoa` ASC) VISIBLE,
  INDEX `INDEX_CPF` (`CPF` ASC) VISIBLE,
  CONSTRAINT `fk_codPessoa_prof`
    FOREIGN KEY (`codPessoa`)
    REFERENCES `argus`.`Pessoas` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_CPF_prof`
    FOREIGN KEY (`CPF`)
    REFERENCES `argus`.`Pessoas` (`CPF`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Disciplinas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Disciplinas` (
  `codDisciplina` VARCHAR(3) NOT NULL,
  `Nome` VARCHAR(20) NOT NULL,
  `Status` ENUM("Ativo", "Inativo") NOT NULL,
  PRIMARY KEY (`codDisciplina`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Curriculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Curriculo` (
  `codCurriculo` VARCHAR(5) NOT NULL,
  `anoLetivo` INT NOT NULL,
  `Nome` VARCHAR(40) NOT NULL,
  `Tipo` ENUM("Bimestral", "Semestral") NOT NULL,
  PRIMARY KEY (`codCurriculo`, `anoLetivo`),
  INDEX `index_anoLetivo_curr` (`anoLetivo` ASC) VISIBLE,
  INDEX `index_codCurriculo_curr` (`codCurriculo` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Curriculo-Disciplina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Curriculo-Disciplina` (
  `codCurriculo` VARCHAR(5) NOT NULL,
  `codDisciplina` VARCHAR(3) NOT NULL,
  `ano` INT NOT NULL,
  `anoLetivo` INT NOT NULL,
  `cargaHoraria` INT NOT NULL,
  PRIMARY KEY (`codCurriculo`, `codDisciplina`, `ano`, `anoLetivo`),
  INDEX `index_codCurriculo_CD` (`codCurriculo` ASC) VISIBLE,
  INDEX `index_codDisciplina_CD` (`codDisciplina` ASC) VISIBLE,
  INDEX `index_ano_CD` (`ano` ASC) VISIBLE,
  INDEX `index_anoLetivo_CD` (`anoLetivo` ASC) VISIBLE,
  INDEX `index_cargaHoraria_CD` (`cargaHoraria` ASC) VISIBLE,
  CONSTRAINT `fk_codCurriculo_CD`
    FOREIGN KEY (`codCurriculo`)
    REFERENCES `argus`.`Curriculo` (`codCurriculo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_codDisciplina_CD`
    FOREIGN KEY (`codDisciplina`)
    REFERENCES `argus`.`Disciplinas` (`codDisciplina`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_anoLetivo_CD`
    FOREIGN KEY (`anoLetivo`)
    REFERENCES `argus`.`Curriculo` (`anoLetivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Professores-Disciplinas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Professores-Disciplinas` (
  `codProfessor` INT NOT NULL,
  `codDisciplina` VARCHAR(3) NOT NULL,
  `codCurriculo` VARCHAR(5) NOT NULL,
  `ano` INT NOT NULL,
  `anoLetivo` INT NOT NULL,
  INDEX `codProfessor_INDEX` (`codProfessor` ASC) VISIBLE,
  INDEX `codDisciplina_INDEX` (`codDisciplina` ASC) VISIBLE,
  PRIMARY KEY (`codProfessor`, `codDisciplina`, `codCurriculo`, `ano`, `anoLetivo`),
  INDEX `index_curriculo_PD` (`codCurriculo` ASC) VISIBLE,
  INDEX `index_ano_PD` (`ano` ASC) VISIBLE,
  INDEX `index_anoLetivo_PD` (`anoLetivo` ASC) INVISIBLE,
  CONSTRAINT `fk_codProfessor_inner`
    FOREIGN KEY (`codProfessor`)
    REFERENCES `argus`.`Professores` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_codDisciplina_inner`
    FOREIGN KEY (`codDisciplina`)
    REFERENCES `argus`.`Curriculo-Disciplina` (`codDisciplina`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_codCurriculo_inner`
    FOREIGN KEY (`codCurriculo`)
    REFERENCES `argus`.`Curriculo-Disciplina` (`codCurriculo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ano_inner`
    FOREIGN KEY (`ano`)
    REFERENCES `argus`.`Curriculo-Disciplina` (`ano`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_anoLetivo_inner`
    FOREIGN KEY (`anoLetivo`)
    REFERENCES `argus`.`Curriculo-Disciplina` (`anoLetivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Turmas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Turmas` (
  `codTurma` INT NOT NULL AUTO_INCREMENT,
  `codCurriculo` VARCHAR(5) NOT NULL,
  `anoLetivo` INT NOT NULL,
  `ano` INT NOT NULL,
  `codHorario` INT NULL,
  PRIMARY KEY (`codTurma`),
  INDEX `index_curriculo_turm` (`codCurriculo` ASC) VISIBLE,
  INDEX `index_anoLetivo_turm` (`anoLetivo` ASC) VISIBLE,
  CONSTRAINT `fk_curriculo_turmas`
    FOREIGN KEY (`codCurriculo`)
    REFERENCES `argus`.`Curriculo` (`codCurriculo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_anoLetivo_turmas`
    FOREIGN KEY (`anoLetivo`)
    REFERENCES `argus`.`Curriculo` (`anoLetivo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Notas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Notas` (
  `codAluno` INT NOT NULL,
  `codDisciplina` VARCHAR(3) NOT NULL,
  `Serie` VARCHAR(11) NOT NULL,
  `Nota` FLOAT NOT NULL,
  `Situação` ENUM("Pendente", "AM", "AP", "RP") NOT NULL,
  PRIMARY KEY (`codAluno`, `codDisciplina`, `Serie`),
  INDEX `index_codAluno` (`codAluno` ASC) INVISIBLE,
  INDEX `index_codDisciplina_notas` (`codDisciplina` ASC) INVISIBLE,
  CONSTRAINT `fk_codAluno_notas`
    FOREIGN KEY (`codAluno`)
    REFERENCES `argus`.`Alunos` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_codDisciplina_notas`
    FOREIGN KEY (`codDisciplina`)
    REFERENCES `argus`.`Disciplinas` (`codDisciplina`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Usuarios` (
  `codPessoa` INT NOT NULL,
  `CPF` VARCHAR(14) NOT NULL,
  `User` VARCHAR(25) NOT NULL,
  `Senha` VARCHAR(32) NOT NULL,
  `Tipo` VARCHAR(10) NOT NULL,
  `Status` ENUM("Ativo", "Inativo") NOT NULL,
  PRIMARY KEY (`codPessoa`),
  INDEX `index_codPessoa_usu` (`codPessoa` ASC) INVISIBLE,
  INDEX `index_CPF_usu` (`CPF` ASC) INVISIBLE,
  UNIQUE INDEX `CPF_UNIQUE` (`CPF` ASC) VISIBLE,
  CONSTRAINT `fk_codPessoa_usu`
    FOREIGN KEY (`codPessoa`)
    REFERENCES `argus`.`Pessoas` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_CPF_usu`
    FOREIGN KEY (`CPF`)
    REFERENCES `argus`.`Pessoas` (`CPF`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`LogSistema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`LogSistema` (
  `order` INT NOT NULL AUTO_INCREMENT,
  `codPessoa` INT NOT NULL,
  `Acao` VARCHAR(100) NOT NULL,
  `Data` DATE NOT NULL,
  `Hora` TIME NOT NULL,
  PRIMARY KEY (`order`, `codPessoa`, `Data`, `Hora`),
  INDEX `index_codPessoas_log` (`codPessoa` ASC) VISIBLE,
  CONSTRAINT `fk_codPessoa_log`
    FOREIGN KEY (`codPessoa`)
    REFERENCES `argus`.`Usuarios` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Precos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Precos` (
  `codCurriculo` VARCHAR(5) NOT NULL,
  `AnoLetivo` YEAR(4) NOT NULL,
  `Valor` DOUBLE NOT NULL,
  PRIMARY KEY (`codCurriculo`, `AnoLetivo`, `Valor`),
  INDEX `index_codCurriculo_preco` (`codCurriculo` ASC) INVISIBLE,
  CONSTRAINT `fk_codCurriculo_precos`
    FOREIGN KEY (`codCurriculo`)
    REFERENCES `argus`.`Curriculo` (`codCurriculo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Pagamentos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Pagamentos` (
  `codResponsavel` INT NOT NULL,
  `codCurriculo` VARCHAR(5) NOT NULL,
  `codAluno` INT NOT NULL,
  `codBarras` VARCHAR(100) NOT NULL,
  `NumeroDaParcela` INT NOT NULL,
  `Status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`codResponsavel`, `codCurriculo`, `codAluno`, `codBarras`, `NumeroDaParcela`),
  UNIQUE INDEX `codBarras_UNIQUE` (`codBarras` ASC) INVISIBLE,
  INDEX `index_codAluno_pag` (`codAluno` ASC) INVISIBLE,
  INDEX `index_codCurriclo_pag` (`codCurriculo` ASC) INVISIBLE,
  INDEX `index_codResponsavel_pag` (`codResponsavel` ASC) INVISIBLE,
  CONSTRAINT `fk_codCurriclo_pag`
    FOREIGN KEY (`codCurriculo`)
    REFERENCES `argus`.`Precos` (`codCurriculo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_codResponsavel_pag`
    FOREIGN KEY (`codResponsavel`)
    REFERENCES `argus`.`ResponsaveisFinanceiros` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_codAluno_pag`
    FOREIGN KEY (`codAluno`)
    REFERENCES `argus`.`Alunos` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Contatos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Contatos` (
  `codPessoa` INT NOT NULL,
  `Telefone` VARCHAR(13) NULL,
  `Celular` VARCHAR(14) NULL,
  `Email` VARCHAR(45) NULL,
  `whatsapp` TINYINT NOT NULL,
  PRIMARY KEY (`codPessoa`),
  INDEX `index_codPessoa_cont` (`codPessoa` ASC) VISIBLE,
  CONSTRAINT `fk_codPessoa_cont`
    FOREIGN KEY (`codPessoa`)
    REFERENCES `argus`.`Pessoas` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`SessaoPedagogica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`SessaoPedagogica` (
  `codPedagogo` INT NOT NULL,
  `Data` DATETIME NOT NULL,
  `Detalhamento` MEDIUMTEXT NOT NULL,
  `Status` ENUM("Em Atendimento", "Concluído") NOT NULL,
  PRIMARY KEY (`codPedagogo`, `Data`),
  INDEX `index_codPedagogo_sessao` (`codPedagogo` ASC) INVISIBLE,
  CONSTRAINT `fk_codPedagogo_sp`
    FOREIGN KEY (`codPedagogo`)
    REFERENCES `argus`.`Usuarios` (`codPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`MudancaDeSenhas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`MudancaDeSenhas` (
  `CPF` VARCHAR(14) NOT NULL,
  `NovaSenha` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`CPF`),
  INDEX `index_CPF_ms` (`CPF` ASC) VISIBLE,
  UNIQUE INDEX `CPF_UNIQUE` (`CPF` ASC) VISIBLE,
  CONSTRAINT `fk_CPF_ms`
    FOREIGN KEY (`CPF`)
    REFERENCES `argus`.`Usuarios` (`CPF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argus`.`Aluno-Turma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `argus`.`Aluno-Turma` (
  `codAluno` INT NOT NULL,
  `codTurma` INT NOT NULL,
  PRIMARY KEY (`codAluno`, `codTurma`),
  INDEX `index_codAluno_turma` (`codAluno` ASC) INVISIBLE,
  INDEX `index_codTurma_turma` (`codTurma` ASC) VISIBLE,
  CONSTRAINT `fk_codAluno_turma`
    FOREIGN KEY (`codAluno`)
    REFERENCES `argus`.`Alunos` (`codPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_codTurma_turma`
    FOREIGN KEY (`codTurma`)
    REFERENCES `argus`.`Turmas` (`codTurma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `argus` ;

-- -----------------------------------------------------
-- procedure getResponsaveis
-- -----------------------------------------------------

DELIMITER $$
USE `argus`$$
CREATE PROCEDURE getResponsaveis()
BEGIN 
	SELECT pessoas.codPessoa, pessoas.Nome, pessoas.Naturalidade, pessoas.Dt_nascimento, pessoas.CPF, Pessoas.Status
	FROM Pessoas
	INNER JOIN ResponsaveisFinanceiros
	WHERE Pessoas.codPessoa = ResponsaveisFinanceiros.codPessoa;
END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure getResponsavelDoAluno
-- -----------------------------------------------------

DELIMITER $$
USE `argus`$$
CREATE PROCEDURE getResponsavelDoAluno(IN codResponsavel INT)
BEGIN 
	SELECT pessoas.codPessoa, pessoas.Nome, pessoas.Naturalidade, pessoas.Dt_nascimento, pessoas.CPF, ResponsaveisFinanceiros.codAluno, Pessoas.Status
	FROM Pessoas
	INNER JOIN ResponsaveisFinanceiros
	WHERE Pessoas.codPessoa = codResponsavel;
END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure getAlunos
-- -----------------------------------------------------

DELIMITER $$
USE `argus`$$
CREATE PROCEDURE getAlunos(IN Turma INT)
BEGIN 
	SELECT pessoas.codPessoa, pessoas.Nome, pessoas.Naturalidade, pessoas.Dt_nascimento, pessoas.CPF, Alunos.NomeMae, Alunos.NomePai, Alunos.codResponsavelFin, Pessoas.Status
	FROM Pessoas
	INNER JOIN `Aluno-Turma`
	WHERE Pessoas.codPessoa = `Aluno-Turma`.codAluno AND `Aluno-Turma`.codTurma = Turma;
END;$$

DELIMITER ;

-- -----------------------------------------------------
-- View `argus`.`ViewUsuario`
-- -----------------------------------------------------
USE `argus`;
CREATE  OR REPLACE VIEW `ViewUsuario`
AS SELECT pessoas.codPessoa, pessoas.Nome, pessoas.Naturalidade, pessoas.Dt_nascimento, pessoas.CPF, usuarios.User, usuarios.Senha, usuarios.Tipo, usuarios.Status
FROM pessoas
INNER JOIN usuarios
ON pessoas.codPessoa = usuarios.codPessoa;

-- -----------------------------------------------------
-- View `argus`.`ViewProfessor`
-- -----------------------------------------------------
USE `argus`;
CREATE  OR REPLACE VIEW `ViewProfessor`
AS SELECT pessoas.codPessoa, pessoas.Nome, pessoas.Naturalidade, pessoas.Dt_nascimento, pessoas.CPF, pessoas.Status, professores.formacao, professores.cursoFormacao
FROM pessoas
INNER JOIN professores
ON pessoas.codPessoa = professores.codPessoa;

-- -----------------------------------------------------
-- View `argus`.`ViewAluno`
-- -----------------------------------------------------
USE `argus`;
CREATE  OR REPLACE VIEW `ViewAluno` 
AS SELECT pessoas.codPessoa, pessoas.Nome, pessoas.Naturalidade, pessoas.Dt_nascimento, pessoas.CPF, Alunos.NomeMae, Alunos.NomePai, Alunos.codResponsavelFin, Pessoas.Status
FROM Pessoas
INNER JOIN Alunos
WHERE Pessoas.codPessoa = Alunos.codPessoa;
USE `argus`;

DELIMITER $$
USE `argus`$$
CREATE DEFINER = CURRENT_USER TRIGGER `argus`.`Pessoas_AFTER_UPDATE` AFTER UPDATE ON `Pessoas` FOR EACH ROW
BEGIN
	UPDATE usuarios SET usuarios.Status = NEW.Status
	WHERE usuarios.codPessoa = NEW.codPessoa;
    
    UPDATE professores SET professores.Status = NEW.Status
    WHERE professores.codPessoa = NEW.codPessoa;
    
    UPDATE alunos SET alunos.Status = NEW.Status
    WHERE alunos.codPessoa = NEW.codPessoa;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
